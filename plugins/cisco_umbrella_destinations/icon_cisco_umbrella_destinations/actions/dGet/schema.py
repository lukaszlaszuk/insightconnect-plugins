# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get list of destinations related to destination list"


class Input:
    DESTINATIONLISTID = "destinationListId"
    LIMIT = "limit"
    ORGANIZATIONID = "organizationId"
    PAGE = "page"
    

class Output:
    SUCCESS = "success"
    

class DGetInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "destinationListId": {
      "type": "integer",
      "title": "Destination List ID",
      "description": "Unique ID for destination list",
      "order": 2
    },
    "limit": {
      "type": "integer",
      "title": "Limit",
      "description": "Limit for page",
      "order": 4
    },
    "organizationId": {
      "type": "integer",
      "title": "Organization ID",
      "description": "Organisation ID",
      "order": 1
    },
    "page": {
      "type": "integer",
      "title": "Page",
      "description": "Pagination",
      "order": 3
    }
  },
  "required": [
    "destinationListId",
    "organizationId"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class DGetOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "success": {
      "type": "object",
      "title": "Success",
      "items": {
        "$ref": "#/definitions/destinationsEntity"
      },
      "order": 1
    }
  },
  "required": [
    "success"
  ],
  "definitions": {
    "destinationsEntity": {
      "type": "object",
      "title": "destinationsEntity",
      "properties": {
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "None",
          "order": 4
        },
        "createdAt": {
          "type": "string",
          "title": "CreatedAt",
          "description": "date and time it has been created at, e.g. example 2018-07-23 19:36:45",
          "order": 5
        },
        "destination": {
          "type": "string",
          "title": "Destination",
          "description": "Destination can be domain, url, ip",
          "order": 2
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Unique ID of the destination",
          "order": 1
        },
        "typeOf": {
          "type": "string",
          "title": "TypeOf",
          "description": "Type can be DOMAIN, URL, IPV4",
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
